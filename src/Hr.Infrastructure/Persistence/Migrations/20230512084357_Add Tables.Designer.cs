// <auto-generated />
using System;
using Hr.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hr.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20230512084357_Add Tables")]
    partial class AddTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hr.Domains.Common.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subdistrict")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Hr.Domains.Features.Employee.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeAddressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfficeAddressId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Hr.Domains.Features.Employee.Employee", b =>
                {
                    b.HasOne("Hr.Domains.Common.Entities.Address", "OfficeAddress")
                        .WithMany()
                        .HasForeignKey("OfficeAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("Hr.Domains.Common.ValueObjects.DateRange", "WorkPeriods", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("EmployeeId", "Id");

                            b1.ToTable("EmployeeWorkPeriods", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("Hr.Domains.Features.Employee.Person", "Person", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Firstname")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Gender")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Lastname")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nationality")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Person", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.OwnsMany("Hr.Domains.Features.Employee.ValueObjects.Email", "Emails", b2 =>
                                {
                                    b2.Property<int>("PersonEmployeeId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Address")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Priority")
                                        .HasColumnType("int");

                                    b2.HasKey("PersonEmployeeId", "Id");

                                    b2.ToTable("Email");

                                    b2.WithOwner()
                                        .HasForeignKey("PersonEmployeeId");
                                });

                            b1.OwnsOne("Hr.Domains.Features.Employee.ValueObjects.GovIdentity", "GovIdentity", b2 =>
                                {
                                    b2.Property<int>("PersonEmployeeId")
                                        .HasColumnType("int");

                                    b2.Property<string>("CitizenId")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PassportNumber")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("PersonEmployeeId");

                                    b2.ToTable("Person");

                                    b2.WithOwner()
                                        .HasForeignKey("PersonEmployeeId");
                                });

                            b1.OwnsMany("Hr.Domains.Features.Employee.ValueObjects.Phone", "Phones", b2 =>
                                {
                                    b2.Property<int>("PersonEmployeeId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Number")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Priority")
                                        .HasColumnType("int");

                                    b2.HasKey("PersonEmployeeId", "Id");

                                    b2.ToTable("Phone");

                                    b2.WithOwner()
                                        .HasForeignKey("PersonEmployeeId");
                                });

                            b1.Navigation("Emails");

                            b1.Navigation("GovIdentity")
                                .IsRequired();

                            b1.Navigation("Phones");
                        });

                    b.OwnsOne("Hr.Domains.Features.Employee.ValueObjects.EmployeeAddress", "HomeAddress", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<int>("CurrentHomeAddressId")
                                .HasColumnType("int");

                            b1.Property<int>("GovRegistredAddressId")
                                .HasColumnType("int");

                            b1.Property<bool>("IsSameHomeAndGovRegisAddress")
                                .HasColumnType("bit");

                            b1.HasKey("EmployeeId");

                            b1.HasIndex("CurrentHomeAddressId");

                            b1.HasIndex("GovRegistredAddressId");

                            b1.ToTable("Employees");

                            b1.HasOne("Hr.Domains.Common.Entities.Address", "CurrentHomeAddress")
                                .WithMany()
                                .HasForeignKey("CurrentHomeAddressId")
                                .OnDelete(DeleteBehavior.Restrict)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.HasOne("Hr.Domains.Common.Entities.Address", "GovRegistredAddress")
                                .WithMany()
                                .HasForeignKey("GovRegistredAddressId")
                                .OnDelete(DeleteBehavior.Restrict)
                                .IsRequired();

                            b1.Navigation("CurrentHomeAddress");

                            b1.Navigation("GovRegistredAddress");
                        });

                    b.OwnsMany("Hr.Domains.Features.Employee.ValueObjects.Position", "Positions", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Priority")
                                .HasColumnType("int");

                            b1.Property<int>("SupervisorId")
                                .HasColumnType("int");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EmployeeId", "Id");

                            b1.HasIndex("SupervisorId");

                            b1.ToTable("Position");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.HasOne("Hr.Domains.Features.Employee.Employee", "Supervisor")
                                .WithMany()
                                .HasForeignKey("SupervisorId")
                                .OnDelete(DeleteBehavior.Restrict)
                                .IsRequired();

                            b1.OwnsOne("Hr.Domains.Common.ValueObjects.DateRange", "Period", b2 =>
                                {
                                    b2.Property<int>("PositionEmployeeId")
                                        .HasColumnType("int");

                                    b2.Property<int>("PositionId")
                                        .HasColumnType("int");

                                    b2.Property<DateTime>("EndDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime>("StartDate")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("PositionEmployeeId", "PositionId");

                                    b2.ToTable("Position");

                                    b2.WithOwner()
                                        .HasForeignKey("PositionEmployeeId", "PositionId");
                                });

                            b1.Navigation("Period")
                                .IsRequired();

                            b1.Navigation("Supervisor");
                        });

                    b.Navigation("HomeAddress")
                        .IsRequired();

                    b.Navigation("OfficeAddress");

                    b.Navigation("Person")
                        .IsRequired();

                    b.Navigation("Positions");

                    b.Navigation("WorkPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
